{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Deploy a service on AWS Fargate, hosted in a private subnet, but accessible via a public load balancer.",
	"Parameters": {
		
		"NetworkStackName": {
			"Type": "String",
			"Default": "production",
			"Description": "The name of the parent Fargate networking stack that you created. Necessary\nto locate and reference resources created by that stack."
		},
		"StackName": {
			"Type": "String",
			"Default": "production",
			"Description": "The name of the parent Fargate networking stack that you created. Necessary\nto locate and reference resources created by that stack."
		},
		"ServiceName": {
			"Type": "String",
			"Default": "spring-boot-app",
			"Description": "A name for the service"
		},
		"ImageUrl": {
			"Type": "String",
			"Default": "nginx",
			"Description": "The url of a docker image that contains the application process that\nwill handle the traffic for this service"
		},
		"ContainerPort": {
			"Type": "Number",
			"Default": 80,
			"Description": "What port number the application inside the docker container is binding to"
		},
		"ContainerCpu": {
			"Type": "Number",
			"Default": 256,
			"Description": "How much CPU to give the container. 1024 is 1 CPU"
		},
		"ContainerMemory": {
			"Type": "Number",
			"Default": 512,
			"Description": "How much memory in megabytes to give the container"
		},
		"DesiredCount": {
			"Type": "Number",
			"Default": 2,
			"Description": "How many copies of the service task to run"
		},
		"TaskName": {
		  "Type": "String",
		  "Description": "The name of the ECS task.",
		  "Default": "spring-boot-app"
		},
		"TaskVersion": {
		  "Type": "String",
		  "Description": "The version of the ECS task."
		}
	},
	"Resources": {
		
		"SecurityGroupECS": {
			"Type": "AWS::EC2::SecurityGroup",
			  "Properties": {
				"GroupDescription": "Allow traffic to ECS cluster",
				"VpcId": "vpc-06588411de49c58f8",
				"SecurityGroupIngress": [
				{
				  "CidrIp": "0.0.0.0/0",
				  "FromPort": "8080",
				  "IpProtocol": "tcp",
				  "ToPort": "8080"
				}],
				"SecurityGroupEgress": [{
				  "CidrIp": "0.0.0.0/0",
				  "FromPort": -1,
				  "IpProtocol": "-1",
				  "ToPort": -1
				}],
				
				"Tags": [{
				  "Key": "Name",
				  "Value": "security-group-spring-boot-app"
				}]
			}
		},
		
		"ECSFargateCluster": {
			"Type" : "AWS::ECS::Cluster",
			"Properties" : {
				"ClusterName" : "fargate-cluster"
			}
		},
		
		"TaskDefinition": {
			"Type": "AWS::ECS::TaskDefinition",
			"Properties": {
				"Family": {
				  "Fn::Join": [
					"",
					[
					  {
						"Ref": "AWS::StackName"
					  },
					  "-",
					  {
						"Ref": "TaskName"
					  },
					  "-",
					  {
						"Ref": "TaskVersion"
					  }
					]
				  ]
				},
				"Cpu": {
				  "Ref": "ContainerCpu"
				},
				"Memory": {
				  "Ref": "ContainerMemory"
				},
				"NetworkMode": "awsvpc",
				"RequiresCompatibilities": [
					"FARGATE"
				],
				"ContainerDefinitions": [
					{
						"Name": {
						  "Ref": "TaskName"
						},
						"Cpu": {
						  "Ref": "ContainerCpu"
						},
						"Memory": {
						  "Ref": "ContainerMemory"
						},
						"Image": {
						  "Ref": "ImageUrl"
						},
						"PortMappings": [
							{
								"ContainerPort": {
								  "Ref": "ContainerPort"
								}
							}
						]
					}
				]
			}
		},
		
		"Service": {
			"Type": "AWS::ECS::Service",
			"Properties": {
				"ServiceName": "spring-boot-app",
				"Cluster": {
					"Ref": "ECSFargateCluster"
				},
				"LaunchType": "FARGATE",
				"DeploymentConfiguration": {
					"MaximumPercent": 200,
					"MinimumHealthyPercent": 75
				},
				"DesiredCount": 1,
				"NetworkConfiguration": {
					"AwsvpcConfiguration": {
						"SecurityGroups": [
							{
								"Ref": "SecurityGroupECS"
							}
						],
						"Subnets": [ "subnet-067fde6293af52d86", "subnet-08a535b0305ee5edc"
						]
					}
				},
				"TaskDefinition": {
				  "Ref": "TaskDefinition"
				}
			}
		}
	}
}